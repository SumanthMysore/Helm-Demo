name: VOTEAPP-BUILD-CICD
run-name: ${{ github.actor }} has triggered the workflow.
on:
  push:
    branches:
      - "master"
jobs:
  build-frontend-react:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: voteapp-frontend-react
    steps:
      - name: Perform checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build the Image and Push to GHCR
        run: |
          docker build . -t ghcr.io/${{ secrets.GHCR_USERNAME }}/voteapp-fe:latest;
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/voteapp-fe:latest

  build-api-go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: voteapp-api-go
    steps:
      - name: Perform checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build the Image and Push to GHCR
        run: |
          docker build . -t ghcr.io/${{ secrets.GHCR_USERNAME }}/voteapp-be:latest;
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/voteapp-be:latest

  deploy-on-eks:
    runs-on: ubuntu-latest
    needs: ["build-frontend-react", "build-api-go"]
    defaults:
      run:
        working-directory: voteappchart
    steps:
      - name: Perform checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.EKS_CLUSTER_REGION }}

      - name: Connect to the EKS Cluster
        run: aws eks update-kubeconfig --region ${{ secrets.EKS_CLUSTER_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Helm Operations 
        run: |
          helm uninstall $(helm list -aq);
          helm install voteapp .

      
